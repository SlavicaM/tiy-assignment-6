// Below is a series of functions, each function has a
// description before it that explains what each of them
// should do. Complete the function so that it satisfies
// it's description.



// 1.
// Should always return the value 5

function giveMeFive() {
   var alwaysFive = 5;
   return alwaysFive;
}

//---------

// 2.
// This function should accept 1 parameter
// and return the exact same thing. This type
// of function is called a no-op as in (no operation)

function noOp(enteredValue) {

         return enteredValue;
}

//---------

// 3.
// This function should accept 1 parameter; a number.
// It should return the number doubled. Doubled meaning
// it should return a number twice the size as the number
// that is passed in.

function double(singleNumber) {

         return singleNumber * 2;

}

//---------

// 4.
// This function should accept 1 parameter; a number.
// It should return the number squared. Squared meaning
// it should return the number multiplied by itself.

function square(squareNumber) {

         return squareNumber * squareNumber;
}

//---------

// 5.
// This function should accept 1 parameter; an array
// of numbers. It should calculate the sum (the total
// of all the numbers in the array added together)
// and return it.


function sum(arr) {
  var arr = [1,2,3,4,5];
 
   return arr[0] + arr[1] + arr[2] + arr[3] + arr[4];

}

//---------

// 6.
// This function should accept 1 parameter; a single
// letter string (like "g".) It should return the index
// of that letter in the alphabet. For example "a" would
// be 1 and "z" would be 26. This should work for both
// lowercase and capital letters.

// HINT: use an array and a for loop

function letterIndex(letter) {
 // Print Numbers
  var numbers = [2,5,7,32, 12];
  for (var index = 0; index < numbers.length; index++) {
    var currentNumber = numbers[index];
    console.log(currentNumber);
 }  

// Print Letters
  var letters= ["a", "b", "c", "d"];
  for (var i= 0; i < letters.length; i++) {
    var currentLetter = letters[i];
    console.log(currenLetter);

}

//---------

// 7.
// This function should accept 1 parameter; a number.
// It should return the letter that corresponds with
// that number. For example, 1 would be "a" and 26
// would be "z". This is the inverse of the previous
// function.

// Note: this needs to work for numbers larger than 26.
// For example 27 should loop back around to "a".

// HINT: use an array and the modulo (%) operator

function reverseLetterIndex() {

}

//---------

// 8.
// This function should accept 1 parameter; a string.
// It should shift every letter in the string by 13
// places. This is a form of Caesar cipher known as
// ROT-13. If you are unsure of exactly what you are
// supposed to do read the wikipedia article that explains
// it quite well: http://en.wikipedia.org/wiki/ROT13

// HINT: use the previous 2 functions

function rot13() {

}
// From the class
function sayHi (name) {
	alert("hello ," + name + "how are you.");
}
//call the function
sayHi("Me");

function sayGoodBye(name) {
	sayHi(name);
	alert("Good Bye");
}
//call the function
sayGoodBye("Slavica");

//new exersice; always alert "Hi" will be executed

function alertHi() {
	var iDontLikeYou;
	if (iDontLikeYou) {
	return;
	}
	alert ("Hi");
	}

// New Exersice : Anonymus Function
function () {
	
}

// Array
var arr ["a", "b", "c", "d"];
for (var i = 0; i < arr.length; i++;) {
	console.log(arr.[i]);
}


